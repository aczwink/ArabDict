name: Build and deploy to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      #build acts-util-core
      - name: Checkout ACTS-Util repo
        uses: actions/checkout@v4
        with:
          repository: aczwink/ACTS-Util
          path: actsutil
  
      - name: Building acts-util-core
        run: |
          npm install
          npm run compile
          npm link
        working-directory: ./actsutil/core

      #build acts-util-node
      - name: Building acts-util-node
        run: |
          npm link acts-util-core
          npm install
          npm run build
          npm link
        working-directory: ./actsutil/node
  
      #build acts-util-apilib
      - name: Building acts-util-apilib
        run: |
          npm link acts-util-core acts-util-node
          npm install
          npm run build
          npm link
        working-directory: ./actsutil/apilib

      #build acfrontend
      - name: Checkout ACFrontEnd repo
        uses: actions/checkout@v4
        with:
          repository: aczwink/ACFrontEnd
          path: acfrontend

      - name: Building acfrontend
        run: |
          npm link acts-util-core
          npm install
          npm run compile
          npm run build
          npm link
        working-directory: ./acfrontend

      #OpenArabicConjugation
      - name: Checkout OpenArabicConjugation repo
        uses: actions/checkout@v4
        with:
          repository: aczwink/OpenArabicConjugation
          path: openarabicconjugation

      - name: Building OpenArabicConjugation
        run: |
          npm link acts-util-core
          npm install
          npm run build
          npm link
        working-directory: ./openarabicconjugation/conjugation_engine

      #OpenArabDict
      - name: Checkout OpenArabDict repo
        uses: actions/checkout@v4
        with:
          repository: aczwink/OpenArabDict
          path: openarabdict

      - name: Building OpenArabDict
        run: |
          npm install
          npm run build
          npm link
        working-directory: ./openarabdict/domain

      #OpenArabDictViewer
      - name: Building OpenArabDictViewer Backend
        run: |
          npm link acts-util-apilib acts-util-core acts-util-node openarabdict-domain openarabicconjugation
          npm install
          npm run build
        working-directory: ./backend
        
      - name: Building OpenArabDictViewer Frontend
        run: |
          npm link acfrontend acts-util-core openarabicconjugation
          npm install
          npm run generate-api
          npm run build
        working-directory: ./frontend

      - name: unzip artifact for deployment
        run: |
          unzip -n arabdict-frontend-release.zip
          rm arabdict-frontend-release.zip
          mv index.htm index.html
          echo 'window.process = { env: { ARABDICT_BACKEND_HOSTNAME: "openarabdictviewer-backend.azurewebsites.net", ARABDICT_BACKEND_PORT: 443, ARABDICT_BACKEND_PROTOCOL: "https" } };' >> env.js
          echo '{ "navigationFallback": { "rewrite": "/index.html" } }' >> staticwebapp.config.json
        working-directory: ./frontend/dist

      # deploy backend to azure
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - uses: azure/webapps-deploy@v3
        with:
          app-name: 'openarabdictviewer-backend'
          package: 'backend/dist/'
          
      - name: logout
        run: |
          az logout

      #Deploying frontend to azure          
      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend/dist"
          api_location: ${{ env.API_LOCATION }}
          skip_app_build: true
          skip_api_build: true
          output_location: ""
          is_static_export: true
